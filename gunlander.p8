pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--debug/config variables
debug = false
shotspeed = 3
gravity = 4
fps = 30
--global variables
ship = {} 
level = {}
bullets = {}
background = {}
backgroundcount = 0 --state of the background for animation
backc = 1
camx = 0
camy = 0
function _init()
    cls()
    ship.x = 8*1
    ship.y = 8*1
    ship.h = 8
    ship.w = 8
    ship.s = 0
    ship.sx = 0
    ship.sy = 0
    ship.crashed = 0
    load_level(1)
    init_background()
end
--build_level should only be called from load_level()
function build_level(lvlnum,startx,starty,endx,endy,lgravity)
    level.number = lvlnum
    level.startx = startx
    level.starty = starty
    level.endx = endx
    level.endy = endy
    level.gravity = lgravity
    level.w = level.endx - level.startx + 1
    level.h = level.endy - level.starty + 1
end
function init_background()
    local i = 0
    local tile = {}
    local sprite = 0
    while i < 240 do
        sprite = min(flr(rnd(32)+16),27)
        tile = {sprite,false}
        add(background,tile)
        i += 1
    end
    reset_twinkling_stars()
end
function reset_twinkling_stars()
    --picks a random selection of stars to twinkle
    backgroundcount = 0
    for t in all(background) do
        if t[1] != 204 then
            if flr(rnd(6)) == 1 then
                t[2] = true
            else
                t[2] = false
            end
        end
    end
end
function draw_background()
    local tile = 1
    backgroundcount += 1
    --every 2 seconds a different set of stars twinkles
    if backgroundcount > fps*2 then
        reset_twinkling_stars()
    end
    local palchange = 7
    -- 2 seconds are divided in 5 parts 1/5light grey - 2/5 dark grey - 3/5 black - 4/5 dark gray - 5/5 light gray
    if backgroundcount <= (fps*2)/5 or backgroundcount >= (fps*8)/5 then
        palchange = 6
    elseif backgroundcount <= (fps*4)/5 or backgroundcount >= (fps*6)/5 then
        palchange = 5
    else
        palchange = 0
    end
    local x = 0
    while x < 16 do
        local y = 0
        while y < 15 do
            --if there is twinkling, palet changes
            if background[tile][2] == true then
                pal(7,palchange)
            else
                pal()
            end
            spr(background[tile][1],x*8,(y*8)+9)
            y += 1
            tile += 1
        end
        x += 1
    end
    pal() --to not affect any other element
    circfill(100,level.h*8-camy-30,30,8)
    circ(64,level.h*8-camy+210,242,7)
    circfill(64,level.h*8-camy+210,230,7)
end
function draw_title()
    spr(64, 30, 30, 8, 4)
    spr(72, 30, 62, 8, 2)
    print("a game by uvehj",2,116,0)
    print("github.com/uvehj/gun-lander",2,122,0)
end
function _draw()
    cls()
    draw_background()
    if level.number != 0 then
        foreach(bullets, draw_object)
        draw_map()
        draw_object(ship)
        rectfill(0,0,8*16,8,1)
        print("gun lander",2,2,7)
    else
        draw_title()
    end
end
function _update()
    if level.number != 0 then
        if debug == true then
            update_ship_debug()
        else
            update_ship()
        end
        update_camera()
        update_bullets()
    end
end
function update_ship_debug()
    if (btnp(0)) then
        movex(ship,-4)
    end
    if (btnp(1)) then
        movex(ship,4)
    end
    if (btnp(2)) then
        movey(ship,-4)
    end
    if (btnp(3)) then
        movey(ship,4)
    end
    if (btnp(4)) then
        spawn_bullet(ship)
    end
end
function update_ship()
    local x = 0
    local y = level.gravity
    if (btnp(0)) then
        x = -30
    end
    if (btnp(1)) then
        x = 30
    end
    if (btnp(4)) then
        y = -80
        spawn_bullet(ship)
    end
    update_speed_move(ship, x, y)

end
--distance in pixels, slow but accurate (should be fine with so few moving objects)
function movex(o, distance)
    while (distance <= -1 or distance >= 1) and o.crashed == 0 do
        if distance >= 1 then
            distance -= 1
            o.x += 1
        end
        if distance <= -1 then
            distance += 1
            o.x -=1
        end
        if is_wall_collision(o) then
            o.crashed = 1
        end
    end
end
--same as movex
function movey(o, distance)
    --while the object hasn't crashed into a wall, check for every pixel of movement
    while (distance <= -1 or distance >= 1) and o.crashed == 0 do
        if distance >= 1 then
            distance -= 1
            o.y += 1
        end
        if distance <= -1 then
            distance += 1
            o.y -=1
        end
        if is_wall_collision(o) then
            o.crashed = 1
        end
    end
end
function update_camera()
    --update camera x axis to center ship
    camx = ship.x+(ship.w/2)-64
    --update camera so it doesn't go beyond the borders
    --in case of a level that is too narrow, the camera will adjust to the left border and show black past the right one
    --if the camera hits the right border adjust to not go further
    if (camx+64)>((level.w*8)-64) then
        camx = (level.w*8) - 128 
    end
    --if the camera goes beyond the left border adjust it to starts at the left edge
    if camx < 0 then
        camx = 0
    end
    --same as with cam x
    camy = ship.y+(ship.h/2)-64
    if (camy+60)>((level.h*8)-60) then
        camy = (level.h*8) - 119
    end
    if camy < 0 then
        camy = 0
    end
end
--big ol if statement to check the four edges of an object
function is_wall_collision(o)
    --top left, top right, bottom left, bottom right 
    local contact_points = {{((o.x)/8)+level.startx,((o.y)/8)+level.starty},{((o.x+o.w-1)/8)+level.startx,(o.y/8)+level.starty},{((o.x)/8)+level.startx,((o.y+o.h-1)/8)+level.starty},{((o.x+o.w-1)/8)+level.startx,((o.y+o.h-1)/8)+level.starty}}
    --enemy buildings
    for pos in all(contact_points) do
        if fget(mget(pos[1],pos[2]),2) then
            return true
        end
    end
    --walls
    for pos in all(contact_points) do
        if fget(mget(pos[1],pos[2]),0) then
            return true
        end
    end
    --friendly buildings
    for pos in all(contact_points) do
        if fget(mget(pos[1],pos[2]),1) then
            return true
        end
    end
    return false
end
function update_speed_move(o,x,y)
    if x > 0 or x < 0 then
        o.sx = o.sx + (x/fps)
    end
    if y > 0 or y < 0 then
        o.sy = o.sy + (y/fps)
    end
    movex(o,o.sx)
    movey(o,o.sy)
end
--draw sprite correctly, o.x and o.y are position (in pixels) on the map
--draws relative to the camera position
--o.s is the sprite of the object
function draw_object(o)
    spr(o.s,o.x - camx,o.y+9-camy)
end
--draw map relative to the camera position
--the first 8 pixels on the top of the screen are for the ui
function draw_map()
    map(level.startx,level.starty,0 - camx,9 - camy,level.w,level.h)
end
--s is the ship object that spawns the bullet
function spawn_bullet(s)
    local b = {}     
    b.h = 4
    b.w = 4
    b.s = 1
    b.x = s.x + (s.w/2) - (b.w/2)
    b.y = s.y + (s.h/2)
    b.sx = 0
    b.sy = shotspeed
    b.crashed = 0
    add(bullets,b)
    return b
end
function update_bullets()
    for b in all (bullets) do
        update_speed_move(b, 0, gravity)
        if b.crashed == 1 then
            del(bullets,b)
        end
    end
end
--level info--
--build_level(lvlnum,startx,starty,endx,endy,lgravity)
function load_level(l)
    if l == 0 then
        build_level(l,0,0,15,14,gravity)
    elseif l == 1 then
        build_level(l,1,5,12,19,gravity)
    end
end

__gfx__
c000000c0880000010022001777777778888888800000000877777777777777800000000cccccccc00011000000000a900000000000000000000000000000000
0c0000c08778000011222211777887777777777708000080888777777777787808000880c66c66c601111110000a999900000000000000000000000000000000
0cc00cc087780000112222117777887778777777088008808778777777778778008088006c66c66c11cccc11a999999900000000000000000000000000000000
0cccccc008800000011221107777777778877777000888008777767777777778000880007c77c77ccccccccc9999999900000000000000000000000000000000
ccc77ccc000000000012210077777777787778770008880087777777777777780088800077877777ccccc77c9797999900000000000000000000000000000000
c0cccc0c00000000005cc50078877777777778870080088087777877788877780080880077877787cc77c77c9979977900000000000000000000000000000000
c001100c000000000555555077777877777777770800000087788777777787780800000077787777cc77cccc9797977900000000000000000000000000000000
c066660c000000006666666677777777777777770000000087777777777777780000000077777777cc77cccc9999977900000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000070000000000000007000000000000000000000000000070000000000000000000000000000000000000000000000000000
00000000000000000007000000000000000000000000000000000000000000000000000000707000000000000000000000000000000000000000000000000000
00000000007000000070700000000000000000000000000000070000000000000000000000070000000000000000000000000000000000000000000000000000
00000700000000000007000000000000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000
00007070000000000000000007000000000000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000
00000700000000700000000000000000000700000000000000000000070000000000007000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888888888888888888888888888888888888888888888888888888888888777777877777777777877777777778777877777787777777777877777777778
87777777777777777777787777777778777777777787777777777777787777788777777877777877777877777777778777877777787777777777877777777778
87777777777777777777787777777778777777777787777777777777787777788777777877777877777877777777778777877777787777778888877777778888
87777777777777777777787777777778777777777787777777777777787777788777777877777877777877777777778777877777787777777777877777777778
87777777777777777777787777777778777777777787777777777777787777788777777888888887777877777777778777877777787777777777877787777778
87777777777777777777787777777778777777777787777777777777787777788777777777777787777877787777778777877777787777777777877787777778
87777777777777777777787777777778777777777787777777777777787777788777777777777787777877787777778777877777787777777777877787777778
87777777777777777777787777777778777777777787777777777777787777788777777777777787777877787777778777877777787777777777877787777778
87777777777777777777787777777778777777777787777777777777787777788777777777777787777877787777778777777777787777777777877787777778
87777777777777777777787777777778777777777787777777777777787777788777777777777787777877787777778777777777787777777777877787777778
87777777777888888888887777777778777777777787777777777777787777788777777777777787777877787777778777777777787777777777877787777778
87777777777877777777787777777778777777777787777787777777787777788888888888888888888888888888888888888888888888888888888888888888
87777777777877777777787777777778777777777787777787777777787777780000000000000000000000000000000000000000000000000000000000000000
87777777777877777777787777777778777777777787777787777777787777780000000000000000000000000000000000000000000000000000000000000000
87777777777877777777787777778888888777777787777787777777777777780000000000000000000000000000000000000000000000000000000000000000
87777777777877777777787777777777777777777787777787777777777777780000000000000000000000000000000000000000000000000000000000000000
87777777777877777777787777777777777777777787777787777777777777780000000000000000000000000000000000000000000000000000000000000000
87777777777777777777787777777777777777777787777787777777777777780000000000000000000000000000000000000000000000000000000000000000
87777777777777777777787777777777777777777787777787777777777777780000000000000000000000000000000000000000000000000000000000000000
87777777777777777777787777777777777777777787777787777777777777780000000000000000000000000000000000000000000000000000000000000000
87777777777777777777787777777777777777777787777787777777777777780000000000000000000000000000000000000000000000000000000000000000
87777777777777777777787777777777777777777787777787777777777777780000000000000000000000000000000000000000000000000000000000000000
87777777777777777777787777777777777777777787777787777777777777780000000000000000000000000000000000000000000000000000000000000000
88888888888888888888888888888888888888888888888888888888888888880000000000000000000000000000000000000000000000000000000000000000
87777778777777777778777777877787777777777877777777778777777777780000000000000000000000000000000000000000000000000000000000000000
87777778777777777778777777877787777777777877777777778777777777780000000000000000000000000000000000000000000000000000000000000000
87777778777777777778777777877787777777777877777777778777777777780000000000000000000000000000000000000000000000000000000000000000
87777778777777777778777777877787778777777877777777778777777777780000000000000000000000000000000000000000000000000000000000000000
87777778777777777778777777877787778777777877777777778777877777780000000000000000000000000000000000000000000000000000000000000000
87777778777788877778777777877787778777777877777777778777877777780000000000000000000000000000000000000000000000000000000000000000
87777778777777777778777777877787778777777877777777778777877777780000000000000000000000000000000000000000000000000000000000000000
87777778777777777778777777777787778777777877777788888777877777780000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000101010101010102040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000a00000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000b00000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00030000000000000000000b0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00030000000000000000000a0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000700000000000000000a0b0600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003040404040404090904040300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00050000000001b0501b0501f050210502505024050210501b0500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
