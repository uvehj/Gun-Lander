pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
ship = {} 
level = {}
camx = 0
camy = 0
function _init()
    cls()
    ship.x = 8*1
    ship.y = 8*1
    ship.h = 8
    ship.w = 8
    ship.s = 0
    ship.crashed = 0
    level.startx = 1
    level.starty = 5
    level.endx = 5
    level.endy = 8
    level.w = level.endx - level.startx + 1
    level.h = level.endy - level.starty + 1
end
function _draw()
    cls()
    draw_map()
    draw_object(ship)
    rectfill(0,0,8*16,8,1)
    print("gun lander",2,2,7)
end
function _update()
    --current controls only for debug
    if (btnp(0)) then
        movex(-4,ship)
    end
    if (btnp(1)) then
        movex(4,ship)
    end
    if (btnp(2)) then
        movey(-4,ship)
    end
    if (btnp(3)) then
        movey(4,ship)
    end
    update_camera()
end
--distance in pixels, slow but accurate (should be fine with so few moving objects)
function movex(distance, o)
    while (distance <= -1 or distance >= 1) and o.crashed == 0 do
        if distance >= 1 then
            distance -= 1
            o.x += 1
        end
        if distance <= -1 then
            distance += 1
            o.x -=1
        end
        if iswallcollision(o) then
            o.crashed = 1
        end
    end
end
--same as movex
function movey(distance, o)
    --while the object hasn't crashed into a wall, check for every pixel of movement
    while (distance <= -1 or distance >= 1) and o.crashed == 0 do
        if distance >= 1 then
            distance -= 1
            o.y += 1
        end
        if distance <= -1 then
            distance += 1
            o.y -=1
        end
        if iswallcollision(o) then
            o.crashed = 1
        end
    end
end
function update_camera()
    --update camera x axis to center ship
    camx = ship.x+(ship.w/2)-64
    --update camera so it doesn't go beyond the borders
    --in case of a level that is too narrow, the camera will adjust to the left border and show black past the right one
    --if the camera hits the right border adjust to not go further
    if (camx+64)>((level.w*8)-64) then
        camx = (level.w*8) - 128 
    end
    --if the camera goes beyond the left border adjust it to starts at the left edge
    if camx < 0 then
        camx = 0
    end
    --same as with cam x
    camy = ship.y+(ship.h/2)-64
    if (camy+60)>((level.h*8)-60) then
        camy = (level.h*8) - 119
    end
    if camy < 0 then
        camy = 0
    end
end
--big ol if statement to check the four edges of an object
function iswallcollision(o)
    return (fget(mget(((o.x)/8)+level.startx,((o.y)/8)+level.starty), 0) or fget(mget(((o.x+o.w-1)/8)+level.startx,(o.y)/8)+level.starty, 0) or fget(mget(((o.x)/8)+level.startx,((o.y+o.h-1)/8)+level.starty), 0) or fget(mget(((o.x+o.w-1)/8)+level.startx,((o.y+o.h-1)/8)+level.starty), 0))
end
--draw sprite correctly, o.x and o.y are position (in pixels) on the map
--draws relative to the camera position
--o.s is the sprite of the object
function draw_object(o)
    spr(o.s,o.x - camx,o.y+9-camy)
end
--draw map relative to the camera position
--the first 8 pixels on the top of the screen are for the ui
function draw_map()
    map(level.startx,level.starty,0 - camx,9 - camy,level.w,level.h)
end

__gfx__
1002200100000000000000002cccccc2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11222211000000000000000025555552000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11222211000000000000000027777772000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0112211000000000000000002bbbbbb2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0012210000000000000000002aaaaaa2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
005cc500000000000000000021111112000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555550000000000000000028888882000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666000000000000000029999992000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003030303030303030303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000030000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000030000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003030303030000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000030000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000303030300000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003030303030303030303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00050000000001b0501b0501f050210502505024050210501b0500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
